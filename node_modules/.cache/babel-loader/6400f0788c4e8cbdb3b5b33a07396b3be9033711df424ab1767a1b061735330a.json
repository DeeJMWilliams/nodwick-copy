{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: []\n};\nconst allLocationSlice = createSlice({\n  name: 'allLocations',\n  initialState,\n  reducers: {\n    setLocations: (state, action) => {\n      state.value = action.payload;\n    },\n    addLocation: (state, action) => {\n      state.value = [...state.value, action.payload];\n    },\n    removeLocation: (state, action) => {\n      state.value = state.value.filter(location => location.lid !== action.payload);\n    },\n    editLocation: (state, action) => {\n      state.value = state.value.map(location => {\n        return location.lid === action.payload.lid ? action.payload : location;\n      });\n    }\n  }\n});\nexport const {\n  addLocation,\n  setLocations,\n  removeLocation,\n  editLocation\n} = allLocationSlice.actions;\nexport const selectLocations = state => state.allLocations.value;\nexport default allLocationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","allLocationSlice","name","reducers","setLocations","state","action","payload","addLocation","removeLocation","filter","location","lid","editLocation","map","actions","selectLocations","allLocations","reducer"],"sources":["/Users/deewilliams/Developer/projects/nodwick-copy/src/slices/allLocationSlice.tsx"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\nimport {Location} from '../types.tsx';\n\ntype stateProps = {\n    value: Location[];\n}\n\nconst initialState:stateProps = {\n    value: [],\n};\n\nconst allLocationSlice = createSlice({\n    name: 'allLocations',\n    initialState,\n    reducers: {\n        setLocations: (state, action:{type:string, payload:Location[]}) => {\n            state.value = action.payload;\n        },\n        addLocation: (state, action:{type:string, payload:Location}) => {\n            state.value = [...state.value, action.payload];\n        },\n        removeLocation: (state, action:{type:string, payload:string}) => {\n            state.value = state.value.filter(location => location.lid !== action.payload);\n        },\n        editLocation: (state, action:{type:string, payload:Location}) => {\n            state.value = state.value.map((location:Location) => { \n                return(\n                    location.lid === action.payload.lid ?\n                    action.payload :\n                    location\n                )\n            })\n        }\n    }\n})\n\nexport const {addLocation, setLocations, removeLocation, editLocation} = allLocationSlice.actions;\nexport const selectLocations = state => state.allLocations.value;\nexport default allLocationSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAO5C,MAAMC,YAAuB,GAAG;EAC5BC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,gBAAgB,GAAGH,WAAW,CAAC;EACjCI,IAAI,EAAE,cAAc;EACpBH,YAAY;EACZI,QAAQ,EAAE;IACNC,YAAY,EAAEA,CAACC,KAAK,EAAEC,MAAwC,KAAK;MAC/DD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,WAAW,EAAEA,CAACH,KAAK,EAAEC,MAAsC,KAAK;MAC5DD,KAAK,CAACL,KAAK,GAAG,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAEM,MAAM,CAACC,OAAO,CAAC;IAClD,CAAC;IACDE,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAoC,KAAK;MAC7DD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACU,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAAC;IACjF,CAAC;IACDM,YAAY,EAAEA,CAACR,KAAK,EAAEC,MAAsC,KAAK;MAC7DD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACc,GAAG,CAAEH,QAAiB,IAAK;QACjD,OACIA,QAAQ,CAACC,GAAG,KAAKN,MAAM,CAACC,OAAO,CAACK,GAAG,GACnCN,MAAM,CAACC,OAAO,GACdI,QAAQ;MAEhB,CAAC,CAAC;IACN;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACH,WAAW;EAAEJ,YAAY;EAAEK,cAAc;EAAEI;AAAY,CAAC,GAAGZ,gBAAgB,CAACc,OAAO;AACjG,OAAO,MAAMC,eAAe,GAAGX,KAAK,IAAIA,KAAK,CAACY,YAAY,CAACjB,KAAK;AAChE,eAAeC,gBAAgB,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}