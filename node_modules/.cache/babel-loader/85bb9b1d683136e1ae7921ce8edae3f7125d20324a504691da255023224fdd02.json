{"ast":null,"code":"var _jsxFileName = \"/Users/deewilliams/Developer/projects/nodwick-copy/src/components/GamePreview.tsx\",\n  _s = $RefreshSig$();\n//React\nimport React, { useState, useEffect } from 'react';\n//Types\n\n//Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectPreviewGame } from '../slices/gamePreviewSlice.tsx';\nimport { setGame } from '../slices/gameSlice.tsx';\n//Methods\nimport { getUser } from '../methods.tsx';\n//Bootstrap\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePreview = () => {\n  _s();\n  const dispatch = useDispatch();\n  const game = useSelector(selectPreviewGame);\n  const [users, setUsers] = useState([]);\n\n  //Make list of all users in game's list of user IDs\n  useEffect(() => {\n    Promise.all(game.user_ids.map(async user_id => {\n      return getUser(user_id);\n    })).then(response => setUsers(response));\n  }, [game]);\n  if (!game.name) return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 28\n  }, this);\n  const userList = users.map((user, i) => {\n    if (i === users.length - 1) {\n      return user.name;\n    } else {\n      return `${user.name}, `;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Game: \", game.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Players: \", userList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: () => dispatch(setGame(game)),\n      children: \"Enter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(GamePreview, \"UTXTpdoZeAzMQg+0l5/8jsDqi4E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GamePreview;\nexport default GamePreview;\nvar _c;\n$RefreshReg$(_c, \"GamePreview\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","selectPreviewGame","setGame","getUser","ListGroup","Button","jsxDEV","_jsxDEV","GamePreview","_s","dispatch","game","users","setUsers","Promise","all","user_ids","map","user_id","then","response","name","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","userList","user","i","length","Item","children","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/deewilliams/Developer/projects/nodwick-copy/src/components/GamePreview.tsx"],"sourcesContent":["//React\nimport React, {useState, useEffect} from 'react';\n//Types\nimport {User, Game} from '../types.tsx'\n//Redux\nimport {useSelector, useDispatch} from 'react-redux';\nimport {selectPreviewGame} from '../slices/gamePreviewSlice.tsx';\nimport {setGame} from '../slices/gameSlice.tsx';\n//Methods\nimport {getUser} from '../methods.tsx';\n//Bootstrap\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\n\nconst GamePreview = (): JSX.Element => {\n    const dispatch = useDispatch()\n    const game:Game = useSelector(selectPreviewGame);\n    const [users, setUsers] = useState<User[]>([]);\n\n    //Make list of all users in game's list of user IDs\n    useEffect(() => {\n        Promise.all(game.user_ids.map(async (user_id:string) => {\n            return getUser(user_id);\n        })).then(response => setUsers(response))\n    }, [game]);\n\n    if (!game.name) return <React.Fragment></React.Fragment>;\n    const userList:string[] = users.map((user:User, i) => {\n        if (i === users.length - 1) {\n            return user.name;\n        } else {\n            return `${user.name}, `\n        }\n    });\n\n    return(\n        <ListGroup.Item>\n            <p>Game: {game.name}</p>\n            <p>Players: {userList}</p>\n            <Button variant=\"secondary\" onClick={() => dispatch(setGame(game))}>Enter</Button>\n        </ListGroup.Item>\n    )\n}\n\nexport default GamePreview;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD;;AAEA;AACA,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,iBAAiB,QAAO,gCAAgC;AAChE,SAAQC,OAAO,QAAO,yBAAyB;AAC/C;AACA,SAAQC,OAAO,QAAO,gBAAgB;AACtC;AACA,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAmB;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,IAAS,GAAGZ,WAAW,CAACE,iBAAiB,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;;EAE9C;EACAC,SAAS,CAAC,MAAM;IACZgB,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACK,QAAQ,CAACC,GAAG,CAAC,MAAOC,OAAc,IAAK;MACpD,OAAOf,OAAO,CAACe,OAAO,CAAC;IAC3B,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIP,QAAQ,CAACO,QAAQ,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,IAAI,CAACA,IAAI,CAACU,IAAI,EAAE,oBAAOd,OAAA,CAACX,KAAK,CAAC0B,QAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAiB,CAAC;EACxD,MAAMC,QAAiB,GAAGf,KAAK,CAACK,GAAG,CAAC,CAACW,IAAS,EAAEC,CAAC,KAAK;IAClD,IAAIA,CAAC,KAAKjB,KAAK,CAACkB,MAAM,GAAG,CAAC,EAAE;MACxB,OAAOF,IAAI,CAACP,IAAI;IACpB,CAAC,MAAM;MACH,OAAQ,GAAEO,IAAI,CAACP,IAAK,IAAG;IAC3B;EACJ,CAAC,CAAC;EAEF,oBACId,OAAA,CAACH,SAAS,CAAC2B,IAAI;IAAAC,QAAA,gBACXzB,OAAA;MAAAyB,QAAA,GAAG,QAAM,EAACrB,IAAI,CAACU,IAAI;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAAyB,QAAA,GAAG,WAAS,EAACL,QAAQ;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BnB,OAAA,CAACF,MAAM;MAAC4B,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAACR,OAAO,CAACS,IAAI,CAAC,CAAE;MAAAqB,QAAA,EAAC;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEzB,CAAC;AAAAjB,EAAA,CA5BKD,WAAW;EAAA,QACIR,WAAW,EACVD,WAAW;AAAA;AAAAoC,EAAA,GAF3B3B,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}